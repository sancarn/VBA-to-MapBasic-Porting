Type PROCESSENTRY32
    dwSize As Integer
    cntUsage As Integer
    th32ProcessID As Integer
    th32DefaultHeapID As Integer
    th32ModuleID As Integer
    cntThreads As Integer
    th32ParentProcessID As Integer
    pcPriClassBase As Integer
    dwFlags As Integer
    szexeFile As String
End Type

'-------------------------------------------------------

Declare Function OpenProcess Lib "kernel32.dll" (ByVal dwDesiredAccess As Integer, 
ByVal blnheritHandle As Integer, ByVal dwAppProcessId As Integer) As Integer

Declare Function ProcessFirst Lib "kernel32.dll" Alias "Process32First" (ByVal hSnapshot As Integer, 
uProcess As PROCESSENTRY32) As Integer

Declare Function ProcessNext Lib "kernel32.dll" Alias "Process32Next" (ByVal hSnapshot As Integer, 
uProcess As PROCESSENTRY32) As Integer

Declare Function CreateToolhelpSnapshot Lib "kernel32.dll" Alias "CreateToolhelp32Snapshot" ( 
ByVal lFlags As Integer, byval lProcessID As Integer) As Integer

Declare Function TerminateProcess Lib "kernel32.dll" (ByVal ApphProcess As Integer, 
ByVal uExitCode As Integer) As Integer

Declare Function CloseHandle Lib "kernel32.dll" (ByVal hObject As Integer) As Integer

Declare Function RunningProcess(ByVal NameProcess As String) As Logical

Print RunningProcess("explorer.exe")

Function RunningProcess(ByVal NameProcess As String) As Logical
    'E.G. NameProcess = "explorer.exe"
    
    Dim TH32CS_SNAPPROCESS as Integer
    TH32CS_SNAPPROCESS = 2
    
    Dim uProcess  As PROCESSENTRY32
    Dim RProcessFound As Integer
    Dim hSnapshot As Integer
    Dim SzExename As String
    Dim ExitCode As Integer
    Dim MyProcess As Integer
    Dim AppKill As Logical
    Dim AppCount As SmallInt
    Dim i As SmallInt
    Dim WinDirEnv As String
         
        If NameProcess <> "" Then
           AppCount = 0

           uProcess.dwSize = 296
           
           'Takes a snapshot of the specified processes, as well as the heaps, modules, and threads used by these processes
           'https://msdn.microsoft.com/en-us/library/windows/desktop/ms682489(v=vs.85).aspx
           hSnapshot = CreateToolhelpSnapshot(TH32CS_SNAPPROCESS, 0)
           
           'Get the first process off the heap
           'RProcessFound is simply a Logical - 'Was a process found?'
           'hSnapshot is the handle to the heap
           'uProcess is the process variable type
           RProcessFound = ProcessFirst(hSnapshot, uProcess)
              
           Do
             'find character(0) in returned process executable
             i = InStr(1, uProcess.szexeFile, Chr$(0))
             
             'Trim to get process name
             SzExename = LCase$(Left$(uProcess.szexeFile, i - 1))
             
             print uProcess.szexeFile
             
             'Get path of "WINDOWS" folder i.e. "C:\WINDOWS"
             WinDirEnv = GetFolderPath$(36) + "\"
             WinDirEnv = LCase$(WinDirEnv)
             
             'if name of process = szexeFile of uProcess then the process is running
             If Right$(SzExename, Len(NameProcess)) = LCase$(NameProcess) Then
                RunningProcess = True
                Exit Function
             End If
             
             'Get the next process off the heap - Similar as before
             RProcessFound = ProcessNext(hSnapshot, uProcess)
           
           'Continue while a process has been found
           Loop While RProcessFound
           
           'Close handle to the heap
           Dim fin as integer
           Fin = CloseHandle(hSnapshot)
        End If
End Function
